name: "Continuous Delivery"
on:
  push:
    branches-ignore:
      - "**"
    tags:
      - "v*"

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  VITE_BASE_PATH: ${{ vars.BASE_PATH }}
  VITE_APP_VERSION: ${{ github.ref_name }}

jobs:
  deploy:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: Kesin11/actions-timeline@v1

      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }} # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: ${{ github.ref_name }}
          releaseBody: "See the assets to download this version and install.\nIf \"escafeFlowEditor-REMAKE\" is broken on the apple silicon mac, run \"xattr -rc escafeFlowEditor-REMAKE.app\" in a terminal."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: make artifact (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          mv dist editor
          mv editor docs
          pnpm build-storybook
          mv storybook-static docs

      - name: Deploy to CloudFlare Pages (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./docs --project-name=escafe-flow-editor-remake --branch=main --commit-dirty=true
