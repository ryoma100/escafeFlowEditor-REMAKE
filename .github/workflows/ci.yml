name: "Continuous Integration"
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  install:
    runs-on: ubuntu-latest
    outputs:
      checkout:
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
      - uses: actions/setup-node@v4
      - uses: actions/cache@v4
        id: pnpm-cache
        with:
          path: node_modules
          key: js-depend-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: pnpm install
        if: steps.pnpm-cache.outputs.cache-hit != 'true'
        run: pnpm install

  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: js-depend-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - uses: pnpm/action-setup@v3
      - run: pnpm lint

  build:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: js-depend-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - uses: pnpm/action-setup@v3
      - run: pnpm build

  build-storybook:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: js-depend-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - uses: pnpm/action-setup@v3
      - run: pnpm build-storybook

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: js-depend-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - uses: pnpm/action-setup@v3
      - run: pnpm coverage
      - name: SonarCloud
        if: ${{ contains(github.head_ref, 'dependabot') == false }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
